#!/usr/bin/python
# -*- coding: utf-8 -*-

#######################################################################
# Copyright Â© 2007-2009 Yuri Malheiros.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published
# the Free Software Foundation; version 2 only.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#######################################################################

import gtk
import gettext
import sys
import os
import gnomevfs
import shutil
import dbus
from tf.core import constants
from tf.core.dbusinterface import TextFlow_dbus_init
import tf.app

def get_paths(uris):
    paths = []
    for i in uris:
        if i.startswith("file://"):
            if gnomevfs.exists(i):
                file_path = gnomevfs.get_local_path_from_uri(i)
            else:
                continue
        else:
            file_path = os.path.abspath(i)
            if not os.path.exists(file_path):
                continue
            
        paths.append(file_path)
        
    return paths



if __name__ == '__main__':
    # Verify language files
    
    if not os.path.exists(constants.LANGUAGES_USER_DIR):
        os.mkdir(constants.LANGUAGES_USER_DIR)
        
        language_dirs = os.listdir(constants.LANGUAGES_DIR)
        
        #print constants.LANGUAGES_DIR
        
        try:
	    language_dirs.remove("__init__.py")
	    language_dirs.remove("__init__.pyc")
        except ValueError:
            pass

        for directory in language_dirs:
            lang_dir = os.path.join(constants.LANGUAGES_DIR, directory)
            lang_user_dir = os.path.join(constants.LANGUAGES_USER_DIR, directory)
            if not os.path.exists(lang_user_dir):
                os.mkdir(lang_user_dir)
            shutil.copy(os.path.join(lang_dir, "snippets.xml"),
                        os.path.join(lang_user_dir, "snippets.xml"))
            shutil.copy(os.path.join(lang_dir, "config.py"),
                        os.path.join(lang_user_dir, "config.py"))

    args = sys.argv

    if len(args) > 1:
        bus = dbus.SessionBus()

        try:
            remote_TextFlow = bus.get_object('org.textflowproject.TextFlow',
                                             '/org/textflowproject/TextFlow')
            paths = get_paths(args[1:])
            for path in paths:
                remote_TextFlow.open_file_tab(path)
            sys.exit(0)
        except dbus.DBusException:
            paths = get_paths(args[1:])
            tf.app.start(paths)
            TextFlow_dbus_init(tf.app.main_window)
    else:
        tf.app.start()
        TextFlow_dbus_init(tf.app.main_window)

    gtk.main()

